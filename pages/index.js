// La Société Nouvelle

import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import React from 'react';

// Objects
import {Session} from '/src/Session.js';

// Sections
import { LegalDataSection } from '/components/LegalDataSection.js';
import { FinancialDataSection } from '../components/FinancialDataSection';
import { CompaniesSection } from '../components/CompaniesSection';
import { InitialStatesSection } from '../components/InitialStatesSection';
import { IndicatorSection } from '../components/IndicatorSection';

// Others components
import { Menu } from '../components/Menu';

/* ---------------------------------------------- */
/* -------------------- HOME -------------------- */
/* ---------------------------------------------- */

export default function Home() 
{
  return (
    <div className={styles.container}>

      <Head>
        <title>METRIZ by La Société Nouvelle</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.jpg" />
      </Head>

      <Metriz/>
      
    </div>
  )
}

/* --------------------------------------------- */
/* -------------------- APP -------------------- */
/* --------------------------------------------- */

/* Notes :
 * 
 */

class Metriz extends React.Component {

  constructor(props) 
  {
    super(props);
    this.state = 
    {
      session: new Session(),
      selectedSection: "legalData",
    }
  }

  render() 
  {
    const {selectedSection} = this.state;

    return (
      <div className="app-view">
        <Menu selectedSection={selectedSection} 
              changeSection={this.changeSection.bind(this)}
              downloadSession={this.downloadSession.bind(this)}
              importSession={this.importSession.bind(this)}/>
        <div className="section-container">
          {this.buildSectionView()}
        </div>
      </div>
    )
  }

  updateSession(session) {
    this.setState({session: session});
  }

  changeSection(section) {
    this.setState({selectedSection: section});
  }

  buildSectionView() 
  {
    switch(this.state.selectedSection)
    {
      case "legalData" : return(<LegalDataSection session={this.state.session}/>)
      case "financialData" : return(<FinancialDataSection session={this.state.session}/>)
      case "companies" : return(<CompaniesSection session={this.state.session}/>)
      case "initialStates" : return(<InitialStatesSection session={this.state.session}/>)
      case "art" : return(<IndicatorSection session={this.state.session} indic="art"/>)
      case "dis" : return(<IndicatorSection session={this.state.session} indic="dis"/>)
      case "eco" : return(<IndicatorSection session={this.state.session} indic="eco"/>)
      case "geq" : return(<IndicatorSection session={this.state.session} indic="geq"/>)
      case "ghg" : return(<IndicatorSection session={this.state.session} indic="ghg"/>)
      case "haz" : return(<IndicatorSection session={this.state.session} indic="haz"/>)
      case "knw" : return(<IndicatorSection session={this.state.session} indic="knw"/>)
      case "mat" : return(<IndicatorSection session={this.state.session} indic="mat"/>)
      case "nrg" : return(<IndicatorSection session={this.state.session} indic="nrg"/>)
      case "soc" : return(<IndicatorSection session={this.state.session} indic="soc"/>)
      case "was" : return(<IndicatorSection session={this.state.session} indic="was"/>)
      case "wat" : return(<IndicatorSection session={this.state.session} indic="wat"/>)
    }
  }

  async downloadSession() {
    const session = this.state.session;
    const fileName = "svg_ese_"+session.getUniteLegale().siren; // To update
    const json = JSON.stringify(session);
    const blob = new Blob([json],{type:'application/json'});
    const href = await URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = href;
    link.download = fileName + ".json";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  }

  importSession(file) {
    this.read(file,this.importData.bind(this));
  }

  read(file,importData) {
    const reader = new FileReader();
    reader.onload = function fileReadCompleted() {
      const backUp = JSON.parse(reader.result);
      importData(backUp);
     };
    reader.readAsText(file);
  }

  async importData(backUp) {
    const session = new Session();
    await session.updateFromBackUp(backUp);
    this.setState({
      session: session,
      selectedSection: "legalData"});
  }

}